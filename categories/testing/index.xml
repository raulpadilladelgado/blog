<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on Ra√∫l Padilla Delgado</title>
    <link>https://raulpadilladelgado.github.io/blog/categories/testing/</link>
    <description>Recent content in testing on Ra√∫l Padilla Delgado</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Thu, 24 Feb 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://raulpadilladelgado.github.io/blog/categories/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Consumer Driven Contract Testing</title>
      <link>https://raulpadilladelgado.github.io/blog/p/consumer-driven-contract-testing/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://raulpadilladelgado.github.io/blog/p/consumer-driven-contract-testing/</guid>
      <description>Introducci√≥n Consumer driven contract testing es un tipo de prueba que nos garantiza que un proveedor cumple lo acordado con un consumidor. Por ejemplo, en una API usar√≠amos este tipo de pruebas para asegurar que el proveedor recibe una petici√≥n y devuelve la respuesta esperada.&#xA;Cuando dos artefactos se comunican entre s√≠, t√≠picamente lo suelen hacer mediante un mensaje, el cual tiene un formato determinado. Ese formato hace que el consumidor dependa del productor para poder funcionar correctamente, ya que su c√≥digo se ajusta a un determinado formato de mensaje.</description>
    </item>
    <item>
      <title>Buenas pr√°cticas en testing (Cap.1)</title>
      <link>https://raulpadilladelgado.github.io/blog/p/buenas-pr%C3%A1cticas-en-testing-cap.1/</link>
      <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://raulpadilladelgado.github.io/blog/p/buenas-pr%C3%A1cticas-en-testing-cap.1/</guid>
      <description>Introducci√≥n Este post trata de exponer una serie de buenas pr√°cticas o trucos a la hora de realizar testing de c√≥digo, y forma parte de una serie de cap√≠tulos que pretenden seguir con el prop√≥sito.&#xA;En esta primera iteraci√≥n la idea es hablemos sobre TDD, programaci√≥n funcional, patrones de dise√±o y estabilidad, todo esto orientado a los tests.&#xA;Vamos al laboratorio! üß™&#xA;TDD en nuestros tests Test-Driven Development (TDD) es una pr√°ctica de programaci√≥n que consiste en escribir primero las pruebas, despu√©s escribir el c√≥digo fuente que pase la prueba satisfactoriamente y, por √∫ltimo, refactorizar el c√≥digo escrito.</description>
    </item>
    <item>
      <title>PHPUnit basics</title>
      <link>https://raulpadilladelgado.github.io/blog/p/phpunit-basics/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://raulpadilladelgado.github.io/blog/p/phpunit-basics/</guid>
      <description>Introducci√≥n e instalaci√≥n Este post surge por mi deseo de iniciar en el desarrollo de tests de c√≥digo PHP mediante PHPUnit, un acercamiento que sirva para asimilar conceptos b√°sicos. ¬°Empezamos!.&#xA;Lo primero que necesitamos es instalar PHPUnit en el proyecto, y √©sto lo realizaremos gracias a composer.&#xA;composer require --dev phpunit/phpunit ^latest Tr√°s esto, en nuestra primera clase de test, debemos extender de TestCase, contenido en:&#xA;vendor ‚Üí phpunit ‚Üí framework ahora es momento de hacer la primera aserci√≥n</description>
    </item>
    <item>
      <title>An√°lisis del libro &#34;Dise√±o √°gil con TDD&#34;</title>
      <link>https://raulpadilladelgado.github.io/blog/p/an%C3%A1lisis-del-libro-dise%C3%B1o-%C3%A1gil-con-tdd/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      <guid>https://raulpadilladelgado.github.io/blog/p/an%C3%A1lisis-del-libro-dise%C3%B1o-%C3%A1gil-con-tdd/</guid>
      <description>Portada libro INTRODUCCI√ìN &amp;ldquo;Dise√±o √Ågil con TDD&amp;rdquo;, por Carlos Ble, es un libro muy interesante que nos ense√±a como implementar Test-Driven Development en el desarrollo de c√≥digo. Muestra como basar nuestro c√≥digo en los Test que escribimos, y no al rev√©s. A continuaci√≥n comparto mis experiencias leyendo √©ste libro.&#xA;¬øQUE BENEFICIOS NOS APORTA? Se presentan grandes beneficios de codificar de √©sta forma. Se habla de conseguir un c√≥digo simple, que haga lo que necesitamos para cada momento, que cuando falle nos de un correcto y constante feedback de porqu√© eso est√° ocurriendo, as√≠ como un c√≥digo legible y f√°cil de mantener.</description>
    </item>
  </channel>
</rss>
